package starling.display;

import starling.events.EventDispatcher;
import starling.errors.AbstractMethodError;
import starling.utils.MatrixUtil;
import starling.utils.MathUtil;
import starling.core.Starling;
import Std;
import starling.display.Stage;
import starling.utils.Color;
import starling.utils.SystemUtil;
import haxe.Log;
import starling.rendering.BatchToken;

@:jsRequire("starling/display/DisplayObject", "default")

extern class DisplayObject extends starling.events.EventDispatcher implements Dynamic {

	function new();
	var __x:Dynamic;
	var __y:Dynamic;
	var __pivotX:Dynamic;
	var __pivotY:Dynamic;
	var __scaleX:Dynamic;
	var __scaleY:Dynamic;
	var __skewX:Dynamic;
	var __skewY:Dynamic;
	var __rotation:Dynamic;
	var __alpha:Dynamic;
	var __visible:Dynamic;
	var __touchable:Dynamic;
	var __blendMode:Dynamic;
	var __name:Dynamic;
	var __useHandCursor:Dynamic;
	var __transformationMatrix:Dynamic;
	var __transformationMatrix3D:Dynamic;
	var __transformationChanged:Dynamic;
	var __is3D:Dynamic;
	var __maskee:Dynamic;
	var __maskInverted:Dynamic;
	var __parent:Dynamic;
	var __lastParentOrSelfChangeFrameID:Dynamic;
	var __lastChildChangeFrameID:Dynamic;
	var __tokenFrameID:Dynamic;
	var __pushToken:Dynamic;
	var __popToken:Dynamic;
	var __hasVisibleArea:Dynamic;
	var __filter:Dynamic;
	var __mask:Dynamic;
	function dispose():Dynamic;
	function removeFromParent(?dispose:Dynamic):Dynamic;
	function getTransformationMatrix(targetSpace:Dynamic, ?out:Dynamic):Dynamic;
	function getBounds(targetSpace:Dynamic, ?out:Dynamic):Dynamic;
	function hitTest(localPoint:Dynamic):Dynamic;
	function hitTestMask(localPoint:Dynamic):Dynamic;
	function localToGlobal(localPoint:Dynamic, ?out:Dynamic):Dynamic;
	function globalToLocal(globalPoint:Dynamic, ?out:Dynamic):Dynamic;
	function render(painter:Dynamic):Dynamic;
	function alignPivot(?horizontalAlign:Dynamic, ?verticalAlign:Dynamic):Dynamic;
	function drawToBitmapData(?out:Dynamic, ?color:Dynamic, ?alpha:Dynamic):Dynamic;
	function getTransformationMatrix3D(targetSpace:Dynamic, ?out:Dynamic):Dynamic;
	function local3DToGlobal(localPoint:Dynamic, ?out:Dynamic):Dynamic;
	function globalToLocal3D(globalPoint:Dynamic, ?out:Dynamic):Dynamic;
	function __setParent(value:Dynamic):Dynamic;
	function __setIs3D(value:Dynamic):Dynamic;
	var isMask:Dynamic;
	function get_isMask():Dynamic;
	function setRequiresRedraw():Dynamic;
	var requiresRedraw:Dynamic;
	function get_requiresRedraw():Dynamic;
	function excludeFromCache():Dynamic;
	function __setTransformationChanged():Dynamic;
	function __updateTransformationMatrices(x:Dynamic, y:Dynamic, pivotX:Dynamic, pivotY:Dynamic, scaleX:Dynamic, scaleY:Dynamic, skewX:Dynamic, skewY:Dynamic, rotation:Dynamic, out:Dynamic, out3D:Dynamic):Dynamic;
	override function dispatchEvent(event:Dynamic):Dynamic;
	override function addEventListener(type:Dynamic, listener:Dynamic):Dynamic;
	override function removeEventListener(type:Dynamic, listener:Dynamic):Dynamic;
	override function removeEventListeners(?type:Dynamic):Dynamic;
	function __addEnterFrameListenerToStage(?e:Dynamic):Dynamic;
	function __removeEnterFrameListenerFromStage(?e:Dynamic):Dynamic;
	var transformationMatrix:Dynamic;
	function get_transformationMatrix():Dynamic;
	function set_transformationMatrix(matrix:Dynamic):Dynamic;
	var transformationMatrix3D:Dynamic;
	function get_transformationMatrix3D():Dynamic;
	var is3D:Dynamic;
	function get_is3D():Dynamic;
	var useHandCursor:Dynamic;
	function get_useHandCursor():Dynamic;
	function set_useHandCursor(value:Dynamic):Dynamic;
	function __onTouch(event:Dynamic):Dynamic;
	var bounds:Dynamic;
	function get_bounds():Dynamic;
	var width:Dynamic;
	function get_width():Dynamic;
	function set_width(value:Dynamic):Dynamic;
	var height:Dynamic;
	function get_height():Dynamic;
	function set_height(value:Dynamic):Dynamic;
	var x:Dynamic;
	function get_x():Dynamic;
	function set_x(value:Dynamic):Dynamic;
	var y:Dynamic;
	function get_y():Dynamic;
	function set_y(value:Dynamic):Dynamic;
	var pivotX:Dynamic;
	function get_pivotX():Dynamic;
	function set_pivotX(value:Dynamic):Dynamic;
	var pivotY:Dynamic;
	function get_pivotY():Dynamic;
	function set_pivotY(value:Dynamic):Dynamic;
	var scaleX:Dynamic;
	function get_scaleX():Dynamic;
	function set_scaleX(value:Dynamic):Dynamic;
	var scaleY:Dynamic;
	function get_scaleY():Dynamic;
	function set_scaleY(value:Dynamic):Dynamic;
	var scale:Dynamic;
	function get_scale():Dynamic;
	function set_scale(value:Dynamic):Dynamic;
	var skewX:Dynamic;
	function get_skewX():Dynamic;
	function set_skewX(value:Dynamic):Dynamic;
	var skewY:Dynamic;
	function get_skewY():Dynamic;
	function set_skewY(value:Dynamic):Dynamic;
	var rotation:Dynamic;
	function get_rotation():Dynamic;
	function set_rotation(value:Dynamic):Dynamic;
	var isRotated:Dynamic;
	function get_isRotated():Dynamic;
	var alpha:Dynamic;
	function get_alpha():Dynamic;
	function set_alpha(value:Dynamic):Dynamic;
	var visible:Dynamic;
	function get_visible():Dynamic;
	function set_visible(value:Dynamic):Dynamic;
	var touchable:Dynamic;
	function get_touchable():Dynamic;
	function set_touchable(value:Dynamic):Dynamic;
	var blendMode:Dynamic;
	function get_blendMode():Dynamic;
	function set_blendMode(value:Dynamic):Dynamic;
	var name:Dynamic;
	function get_name():Dynamic;
	function set_name(value:Dynamic):Dynamic;
	var filter:Dynamic;
	function get_filter():Dynamic;
	function set_filter(value:Dynamic):Dynamic;
	var mask:Dynamic;
	function get_mask():Dynamic;
	function set_mask(value:Dynamic):Dynamic;
	var maskInverted:Dynamic;
	function get_maskInverted():Dynamic;
	function set_maskInverted(value:Dynamic):Dynamic;
	var parent:Dynamic;
	function get_parent():Dynamic;
	var base:Dynamic;
	function get_base():Dynamic;
	var root:Dynamic;
	function get_root():Dynamic;
	var stage:Dynamic;
	function get_stage():Dynamic;
	static var sAncestors:Dynamic;
	static var sHelperPoint:Dynamic;
	static var sHelperPoint3D:Dynamic;
	static var sHelperPointAlt3D:Dynamic;
	static var sHelperRect:Dynamic;
	static var sHelperMatrix:Dynamic;
	static var sHelperMatrixAlt:Dynamic;
	static var sHelperMatrix3D:Dynamic;
	static var sHelperMatrixAlt3D:Dynamic;
	static var sMaskWarningShown:Dynamic;
	static function __findCommonParent(object1:Dynamic, object2:Dynamic):Dynamic;


}