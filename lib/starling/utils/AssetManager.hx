package starling.utils;

import starling.events.EventDispatcher;
import starling.utils.ArrayUtil;
import haxe.ds.StringMap;
import Std;
import Type;
import starling.core.Starling;
import haxe.Timer;
import starling.textures.TextureAtlas;
import starling.text.TextField;
import starling.text.BitmapFont;
import Xml;
import starling.textures.Texture;
import js.Boot;
import starling.textures.AtfData;
import EReg;
import haxe.Log;
import HxOverrides;
import starling.textures.TextureOptions;

@:jsRequire("starling/utils/AssetManager", "default")

extern class AssetManager extends starling.events.EventDispatcher implements Dynamic {

	function new(?scaleFactor:Dynamic, ?useMipmaps:Dynamic);
	var __starling:Dynamic;
	var __numLostTextures:Dynamic;
	var __numRestoredTextures:Dynamic;
	var __numLoadingQueues:Dynamic;
	var __defaultTextureOptions:Dynamic;
	var __checkPolicyFile:Dynamic;
	var __keepAtlasXmls:Dynamic;
	var __keepFontXmls:Dynamic;
	var __numConnections:Dynamic;
	var __verbose:Dynamic;
	var __queue:Dynamic;
	var __textures:Dynamic;
	var __atlases:Dynamic;
	var __sounds:Dynamic;
	var __xmls:Dynamic;
	var __objects:Dynamic;
	var __byteArrays:Dynamic;
	function dispose():Dynamic;
	function getTexture(name:Dynamic):Dynamic;
	function getTextures(?prefix:Dynamic, ?out:Dynamic):Dynamic;
	function getTextureNames(?prefix:Dynamic, ?out:Dynamic):Dynamic;
	function getTextureAtlas(name:Dynamic):Dynamic;
	function getTextureAtlasNames(?prefix:Dynamic, ?out:Dynamic):Dynamic;
	function getSound(name:Dynamic):Dynamic;
	function getSoundNames(?prefix:Dynamic, ?out:Dynamic):Dynamic;
	function playSound(name:Dynamic, ?startTime:Dynamic, ?loops:Dynamic, ?transform:Dynamic):Dynamic;
	function getXml(name:Dynamic):Dynamic;
	function getXmlNames(?prefix:Dynamic, ?out:Dynamic):Dynamic;
	function getObject(name:Dynamic):Dynamic;
	function getObjectNames(?prefix:Dynamic, ?out:Dynamic):Dynamic;
	function getByteArray(name:Dynamic):Dynamic;
	function getByteArrayNames(?prefix:Dynamic, ?out:Dynamic):Dynamic;
	function addTexture(name:Dynamic, texture:Dynamic):Dynamic;
	function addTextureAtlas(name:Dynamic, atlas:Dynamic):Dynamic;
	function addSound(name:Dynamic, sound:Dynamic):Dynamic;
	function addXml(name:Dynamic, xml:Dynamic):Dynamic;
	function addObject(name:Dynamic, object:Dynamic):Dynamic;
	function addByteArray(name:Dynamic, byteArray:Dynamic):Dynamic;
	function removeTexture(name:Dynamic, ?dispose:Dynamic):Dynamic;
	function removeTextureAtlas(name:Dynamic, ?dispose:Dynamic):Dynamic;
	function removeSound(name:Dynamic):Dynamic;
	function removeXml(name:Dynamic, ?dispose:Dynamic):Dynamic;
	function removeObject(name:Dynamic):Dynamic;
	function removeByteArray(name:Dynamic, ?dispose:Dynamic):Dynamic;
	function purgeQueue():Dynamic;
	function purge():Dynamic;
	function enqueue(rawAssets:Dynamic):Dynamic;
	function enqueueWithName(asset:Dynamic, ?name:Dynamic, ?options:Dynamic):Dynamic;
	function loadQueue(onProgress:Dynamic):Dynamic;
	function processRawAsset(name:Dynamic, rawAsset:Dynamic, options:Dynamic, xmls:Dynamic, onProgress:Dynamic, onComplete:Dynamic):Dynamic;
	function loadRawAsset(rawAsset:Dynamic, onProgress:Dynamic, onComplete:Dynamic):Dynamic;
	function getName(rawAsset:Dynamic):Dynamic;
	function transformData(data:Dynamic, url:Dynamic):Dynamic;
	function log(message:Dynamic):Dynamic;
	function byteArrayStartsWith(bytes:Dynamic, char:Dynamic):Dynamic;
	function getDictionaryKeys(dictionary:Dynamic, ?prefix:Dynamic, ?out:Dynamic):Dynamic;
	function getHttpHeader(headers:Dynamic, headerName:Dynamic):Dynamic;
	function getBasenameFromUrl(url:Dynamic):Dynamic;
	function getExtensionFromUrl(url:Dynamic):Dynamic;
	function prependCallback(oldCallback:Dynamic, newCallback:Dynamic):Dynamic;
	function compare(a:Dynamic, b:Dynamic):Dynamic;
	var queue:Dynamic;
	function get_queue():Dynamic;
	var nu__queuedAssets:Dynamic;
	function get_nu__queuedAssets():Dynamic;
	var verbose:Dynamic;
	function get_verbose():Dynamic;
	function set_verbose(value:Dynamic):Dynamic;
	var isLoading:Dynamic;
	function get_isLoading():Dynamic;
	var useMipMaps:Dynamic;
	function get_useMipMaps():Dynamic;
	function set_useMipMaps(value:Dynamic):Dynamic;
	var scaleFactor:Dynamic;
	function get_scaleFactor():Dynamic;
	function set_scaleFactor(value:Dynamic):Dynamic;
	var textureFormat:Dynamic;
	function get_textureFormat():Dynamic;
	function set_textureFormat(value:Dynamic):Dynamic;
	var forcePotTextures:Dynamic;
	function get_forcePotTextures():Dynamic;
	function set_forcePotTextures(value:Dynamic):Dynamic;
	var checkPolicyFile:Dynamic;
	function get_checkPolicyFile():Dynamic;
	function set_checkPolicyFile(value:Dynamic):Dynamic;
	var keepAtlasXmls:Dynamic;
	function get_keepAtlasXmls():Dynamic;
	function set_keepAtlasXmls(value:Dynamic):Dynamic;
	var keepFontXmls:Dynamic;
	function get_keepFontXmls():Dynamic;
	function set_keepFontXmls(value:Dynamic):Dynamic;
	var numConnections:Dynamic;
	function get_numConnections():Dynamic;
	function set_numConnections(value:Dynamic):Dynamic;
	static var HTTP_RESPONSE_STATUS:Dynamic;
	static var sNames:Dynamic;
	static var NAME_REGEX:Dynamic;


}