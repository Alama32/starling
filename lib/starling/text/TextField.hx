package starling.text;

import starling.display.DisplayObjectContainer;
import starling.text.BitmapFont;
import starling.core.Starling;
import starling.utils.RectangleUtil;
import starling.display.Sprite;
import starling.display.Quad;
import starling.text.TrueTypeCompositor;
import starling.utils.SystemUtil;
import js.Boot;
import haxe.ds.StringMap;
import starling.text.TextFormat;
import starling.text.TextOptions;
import starling.display.MeshBatch;

@:jsRequire("starling/text/TextField", "default")

extern class TextField extends starling.display.DisplayObjectContainer implements Dynamic {

	function new(width:Dynamic, height:Dynamic, ?text:Dynamic, ?format:Dynamic);
	var _text:Dynamic;
	var _options:Dynamic;
	var _format:Dynamic;
	var _textBounds:Dynamic;
	var _hitArea:Dynamic;
	var _compositor:Dynamic;
	var _requiresRecomposition:Dynamic;
	var _border:Dynamic;
	var _meshBatch:Dynamic;
	var _style:Dynamic;
	var _recomposing:Dynamic;
	override function dispose():Dynamic;
	override function render(painter:Dynamic):Dynamic;
	function recompose():Dynamic;
	function updateText():Dynamic;
	function updateBorder():Dynamic;
	function setRequiresRecomposition():Dynamic;
	var isHorizontalAutoSize:Dynamic;
	function get_isHorizontalAutoSize():Dynamic;
	var isVerticalAutoSize:Dynamic;
	function get_isVerticalAutoSize():Dynamic;
	var textBounds:Dynamic;
	function get_textBounds():Dynamic;
	override function getBounds(targetSpace:Dynamic, ?out:Dynamic):Dynamic;
	override function hitTest(localPoint:Dynamic):Dynamic;
	override function set_width(value:Dynamic):Dynamic;
	override function set_height(value:Dynamic):Dynamic;
	var text:Dynamic;
	function get_text():Dynamic;
	function set_text(value:Dynamic):Dynamic;
	var format:Dynamic;
	function get_format():Dynamic;
	function set_format(value:Dynamic):Dynamic;
	var options:Dynamic;
	function get_options():Dynamic;
	var border:Dynamic;
	function get_border():Dynamic;
	function set_border(value:Dynamic):Dynamic;
	var autoScale:Dynamic;
	function get_autoScale():Dynamic;
	function set_autoScale(value:Dynamic):Dynamic;
	var autoSize:Dynamic;
	function get_autoSize():Dynamic;
	function set_autoSize(value:Dynamic):Dynamic;
	var wordWrap:Dynamic;
	function get_wordWrap():Dynamic;
	function set_wordWrap(value:Dynamic):Dynamic;
	var batchable:Dynamic;
	function get_batchable():Dynamic;
	function set_batchable(value:Dynamic):Dynamic;
	var isHtmlText:Dynamic;
	function get_isHtmlText():Dynamic;
	function set_isHtmlText(value:Dynamic):Dynamic;
	var pixelSnapping:Dynamic;
	function get_pixelSnapping():Dynamic;
	function set_pixelSnapping(value:Dynamic):Dynamic;
	var style:Dynamic;
	function get_style():Dynamic;
	function set_style(value:Dynamic):Dynamic;
	static var COMPOSITOR_DATA_NAME:Dynamic;
	static var sMatrix:Dynamic;
	static var sDefaultCompositor:Dynamic;
	static var sDefaultTextureFormat:Dynamic;
	static var defaultTextureFormat:Dynamic;
	static function get_defaultTextureFormat():Dynamic;
	static function set_defaultTextureFormat(value:Dynamic):Dynamic;
	static var defaultCompositor:Dynamic;
	static function get_defaultCompositor():Dynamic;
	static function set_defaultCompositor(value:Dynamic):Dynamic;
	static function updateEmbeddedFonts():Dynamic;
	static function registerCompositor(compositor:Dynamic, name:Dynamic):Dynamic;
	static function unregisterCompositor(name:Dynamic, ?dispose:Dynamic):Dynamic;
	static function getCompositor(name:Dynamic):Dynamic;
	static function registerBitmapFont(bitmapFont:Dynamic, ?name:Dynamic):Dynamic;
	static function unregisterBitmapFont(name:Dynamic, ?dispose:Dynamic):Dynamic;
	static function getBitmapFont(name:Dynamic):Dynamic;
	static var compositors:Dynamic;
	static function get_compositors():Dynamic;
	static var sStringCache:Dynamic;
	static function convertToLowerCase(string:Dynamic):Dynamic;


}