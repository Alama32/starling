package starling.rendering;

import haxe.ds.ObjectMap;
import starling.utils.RenderUtil;
import starling.utils.SystemUtil;
import Std;
import starling.rendering.RenderState;
import starling.utils.MatrixUtil;
import starling.utils.RectangleUtil;
import starling.utils.Pool;
import starling.display.Quad;
import starling.utils.MathUtil;
import starling.display.BlendMode;
import haxe.ds.StringMap;
import starling.utils.MeshSubset;
import starling.rendering.BatchProcessor;

@:jsRequire("starling/rendering/Painter", "default")

extern class Painter implements Dynamic {

	function new(stage3D:Dynamic);
	var _stage3D:Dynamic;
	var _context:Dynamic;
	var _shareContext:Dynamic;
	var _drawCount:Dynamic;
	var _frameID:Dynamic;
	var _pixelSize:Dynamic;
	var _enableErrorChecking:Dynamic;
	var _stencilReferenceValues:Dynamic;
	var _clipRectStack:Dynamic;
	var _batchCacheExclusions:Dynamic;
	var _batchProcessor:Dynamic;
	var _batchProcessorCurr:Dynamic;
	var _batchProcessorPrev:Dynamic;
	var _batchProcessorSpec:Dynamic;
	var _actualRenderTarget:Dynamic;
	var _actualRenderTargetOptions:Dynamic;
	var _actualCulling:Dynamic;
	var _actualBlendMode:Dynamic;
	var _actualDepthMask:Dynamic;
	var _actualDepthTest:Dynamic;
	var _backBufferWidth:Dynamic;
	var _backBufferHeight:Dynamic;
	var _backBufferScaleFactor:Dynamic;
	var _state:Dynamic;
	var _stateStack:Dynamic;
	var _stateStackPos:Dynamic;
	var _stateStackLength:Dynamic;
	function dispose():Dynamic;
	function requestContext3D(renderMode:Dynamic, profile:Dynamic):Dynamic;
	function onContextCreated(event:Dynamic):Dynamic;
	function configureBackBuffer(viewPort:Dynamic, contentScaleFactor:Dynamic, antiAlias:Dynamic, enableDepthAndStencil:Dynamic):Dynamic;
	function registerProgram(name:Dynamic, program:Dynamic):Dynamic;
	function deleteProgram(name:Dynamic):Dynamic;
	function getProgram(name:Dynamic):Dynamic;
	function hasProgram(name:Dynamic):Dynamic;
	function pushState(?token:Dynamic):Dynamic;
	function setStateTo(transformationMatrix:Dynamic, ?alphaFactor:Dynamic, ?blendMode:Dynamic):Dynamic;
	function popState(?token:Dynamic):Dynamic;
	function restoreState():Dynamic;
	function fillToken(token:Dynamic):Dynamic;
	function drawMask(mask:Dynamic, ?maskee:Dynamic):Dynamic;
	function eraseMask(mask:Dynamic, ?maskee:Dynamic):Dynamic;
	function renderMask(mask:Dynamic):Dynamic;
	function pushClipRect(clipRect:Dynamic):Dynamic;
	function popClipRect():Dynamic;
	function isRectangularMask(mask:Dynamic, maskee:Dynamic, out:Dynamic):Dynamic;
	function batchMesh(mesh:Dynamic, ?subset:Dynamic):Dynamic;
	function finishMeshBatch():Dynamic;
	function finishFrame():Dynamic;
	function processCacheExclusions():Dynamic;
	function setupContextDefaults():Dynamic;
	function nextFrame():Dynamic;
	function swapBatchProcessors():Dynamic;
	function drawFromCache(startToken:Dynamic, endToken:Dynamic):Dynamic;
	function excludeFromCache(object:Dynamic):Dynamic;
	function drawBatch(meshBatch:Dynamic):Dynamic;
	function prepareToDraw():Dynamic;
	function clear(?rgb:Dynamic, ?alpha:Dynamic):Dynamic;
	function present():Dynamic;
	function applyBlendMode():Dynamic;
	function applyCulling():Dynamic;
	function applyDepthTest():Dynamic;
	function applyRenderTarget():Dynamic;
	function applyClipRect():Dynamic;
	var drawCount:Dynamic;
	function get_drawCount():Dynamic;
	function set_drawCount(value:Dynamic):Dynamic;
	var stencilReferenceValue:Dynamic;
	function get_stencilReferenceValue():Dynamic;
	function set_stencilReferenceValue(value:Dynamic):Dynamic;
	var cacheEnabled:Dynamic;
	function get_cacheEnabled():Dynamic;
	function set_cacheEnabled(value:Dynamic):Dynamic;
	var state:Dynamic;
	function get_state():Dynamic;
	var stage3D:Dynamic;
	function get_stage3D():Dynamic;
	var context:Dynamic;
	function get_context():Dynamic;
	var frameID:Dynamic;
	function set_frameID(value:Dynamic):Dynamic;
	function get_frameID():Dynamic;
	var pixelSize:Dynamic;
	function get_pixelSize():Dynamic;
	function set_pixelSize(value:Dynamic):Dynamic;
	var shareContext:Dynamic;
	function get_shareContext():Dynamic;
	function set_shareContext(value:Dynamic):Dynamic;
	var enableErrorChecking:Dynamic;
	function get_enableErrorChecking():Dynamic;
	function set_enableErrorChecking(value:Dynamic):Dynamic;
	var backBufferWidth:Dynamic;
	function get_backBufferWidth():Dynamic;
	var backBufferHeight:Dynamic;
	function get_backBufferHeight():Dynamic;
	var backBufferScaleFactor:Dynamic;
	function get_backBufferScaleFactor():Dynamic;
	var contextValid:Dynamic;
	function get_contextValid():Dynamic;
	var profile:Dynamic;
	function get_profile():Dynamic;
	var sharedData:Dynamic;
	function get_sharedData():Dynamic;
	var programs:Dynamic;
	function get_programs():Dynamic;
	static var PROGRAM_DATA_NAME:Dynamic;
	static var DEFAULT_STENCIL_VALUE:Dynamic;
	static var sSharedData:Dynamic;
	static var sMatrix:Dynamic;
	static var sPoint3D:Dynamic;
	static var sMatrix3D:Dynamic;
	static var sClipRect:Dynamic;
	static var sBufferRect:Dynamic;
	static var sScissorRect:Dynamic;
	static var sMeshSubset:Dynamic;


}